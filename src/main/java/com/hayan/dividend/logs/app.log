2024-09-07 00:14:37 WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=2h51m32s862ms).
2024-09-07 00:15:42 WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m4s488ms).
2024-09-07 00:16:45 INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-09-07 00:16:45 INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-09-07 00:16:45 INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2024-09-07 00:17:03 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-09-07 00:17:03 WARN  o.s.b.f.s.DisposableBeanAdapter - Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-224]
2024-09-07 00:17:03 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-09-07 00:17:03 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-09-07 00:17:05 INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2024-09-07 00:17:05 INFO  c.hayan.dividend.DividendApplication - Starting DividendApplication using Java 17.0.7 with PID 85959 (/Users/chowhite/coding/zerobase/dividend/build/classes/java/main started by chowhite in /Users/chowhite/coding/zerobase/dividend)
2024-09-07 00:17:05 INFO  c.hayan.dividend.DividendApplication - The following 2 profiles are active: "test", "default"
2024-09-07 00:17:05 INFO  o.s.b.d.restart.ChangeableUrls - The Class-Path manifest attribute in /Users/chowhite/.gradle/caches/modules-2/files-2.1/io.github.cdimascio/java-dotenv/5.2.2/f77d54ff193ed4b07415ab8d7b3d0550716aa8c/java-dotenv-5.2.2.jar referenced one or more files that do not exist: file:/Users/chowhite/.gradle/caches/modules-2/files-2.1/io.github.cdimascio/java-dotenv/5.2.2/f77d54ff193ed4b07415ab8d7b3d0550716aa8c/kotlin-stdlib-1.4.0.jar,file:/Users/chowhite/.gradle/caches/modules-2/files-2.1/io.github.cdimascio/java-dotenv/5.2.2/f77d54ff193ed4b07415ab8d7b3d0550716aa8c/kotlin-stdlib-common-1.4.0.jar,file:/Users/chowhite/.gradle/caches/modules-2/files-2.1/io.github.cdimascio/java-dotenv/5.2.2/f77d54ff193ed4b07415ab8d7b3d0550716aa8c/annotations-13.0.jar
2024-09-07 00:17:05 INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-09-07 00:17:05 INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-09-07 00:17:05 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-09-07 00:17:05 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-09-07 00:17:05 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 93 ms. Found 3 JPA repository interfaces.
2024-09-07 00:17:05 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-09-07 00:17:05 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-09-07 00:17:05 INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.hayan.dividend.repository.CompanyRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-09-07 00:17:05 INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.hayan.dividend.repository.DividendRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-09-07 00:17:05 INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.hayan.dividend.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-09-07 00:17:05 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2024-09-07 00:17:06 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-09-07 00:17:06 INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-09-07 00:17:06 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-09-07 00:17:06 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.28]
2024-09-07 00:17:06 INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-09-07 00:17:06 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1023 ms
2024-09-07 00:17:06 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-09-07 00:17:06 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:db user=SA
2024-09-07 00:17:06 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-09-07 00:17:06 INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:db'
2024-09-07 00:17:06 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-09-07 00:17:06 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.2.Final
2024-09-07 00:17:06 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-09-07 00:17:06 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-09-07 00:17:06 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-09-07 00:17:06 DEBUG org.hibernate.SQL - 
    create table companies (
        id bigint generated by default as identity,
        name varchar(255) not null,
        ticker varchar(255) not null,
        primary key (id)
    )
2024-09-07 00:17:06 DEBUG org.hibernate.SQL - 
    create table dividends (
        id bigint generated by default as identity,
        date date,
        dividend varchar(255),
        company_id bigint,
        primary key (id)
    )
2024-09-07 00:17:06 DEBUG org.hibernate.SQL - 
    create table user_roles (
        user_id bigint not null,
        role enum ('READ','WRITE')
    )
2024-09-07 00:17:06 DEBUG org.hibernate.SQL - 
    create table users (
        id bigint generated by default as identity,
        password varchar(255) not null,
        username varchar(255) not null,
        primary key (id)
    )
2024-09-07 00:17:06 DEBUG org.hibernate.SQL - 
    alter table if exists users 
       drop constraint if exists UKr43af9ap4edm43mmtq01oddj6
2024-09-07 00:17:06 DEBUG org.hibernate.SQL - 
    alter table if exists users 
       add constraint UKr43af9ap4edm43mmtq01oddj6 unique (username)
2024-09-07 00:17:06 DEBUG org.hibernate.SQL - 
    alter table if exists dividends 
       add constraint FKeg6asiy7s7dns1nsxve1avean 
       foreign key (company_id) 
       references companies
2024-09-07 00:17:06 DEBUG org.hibernate.SQL - 
    alter table if exists user_roles 
       add constraint FKhfh9dx7w3ubf1co1vdev94g3f 
       foreign key (user_id) 
       references users
2024-09-07 00:17:06 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-09-07 00:17:07 DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.name,
        c1_0.ticker 
    from
        companies c1_0
2024-09-07 00:17:07 INFO  c.hayan.dividend.aop.LoggingAspect - Entering method: CacheConfig.redisConnectionFactory with arguments: []
2024-09-07 00:17:07 INFO  c.hayan.dividend.aop.LoggingAspect - Exiting method: CacheConfig.redisConnectionFactory with result: org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory@43665942
2024-09-07 00:17:07 INFO  c.hayan.dividend.aop.LoggingAspect - Executed method: CacheConfig.redisConnectionFactory in 8 ms
2024-09-07 00:17:07 INFO  c.hayan.dividend.aop.LoggingAspect - Entering method: CacheConfig.redisCacheManager with arguments: [org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory@43665942]
2024-09-07 00:17:07 INFO  c.hayan.dividend.aop.LoggingAspect - Exiting method: CacheConfig.redisCacheManager with result: org.springframework.data.redis.cache.RedisCacheManager@43acb698
2024-09-07 00:17:07 INFO  c.hayan.dividend.aop.LoggingAspect - Executed method: CacheConfig.redisCacheManager in 8 ms
2024-09-07 00:17:07 INFO  c.hayan.dividend.aop.LoggingAspect - Entering method: SecurityConfig.passwordEncoder with arguments: []
2024-09-07 00:17:07 INFO  c.hayan.dividend.aop.LoggingAspect - Exiting method: SecurityConfig.passwordEncoder with result: org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder@3b410b18
2024-09-07 00:17:07 INFO  c.hayan.dividend.aop.LoggingAspect - Executed method: SecurityConfig.passwordEncoder in 2 ms
2024-09-07 00:17:07 INFO  c.hayan.dividend.aop.LoggingAspect - Entering method: SecurityConfig.authenticationManager with arguments: [org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration@4415db19]
2024-09-07 00:17:07 INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2024-09-07 00:17:07 INFO  c.hayan.dividend.aop.LoggingAspect - Exiting method: SecurityConfig.authenticationManager with result: org.springframework.security.authentication.ProviderManager@2dc2b158
2024-09-07 00:17:07 INFO  c.hayan.dividend.aop.LoggingAspect - Executed method: SecurityConfig.authenticationManager in 12 ms
2024-09-07 00:17:07 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-09-07 00:17:07 INFO  c.hayan.dividend.aop.LoggingAspect - Entering method: SecurityConfig.securityFilterChain with arguments: [org.springframework.security.config.annotation.web.builders.HttpSecurity@3acb51e5]
2024-09-07 00:17:07 INFO  c.hayan.dividend.aop.LoggingAspect - Exiting method: SecurityConfig.securityFilterChain with result: DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@77bcd62a, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2cd6a4bd, org.springframework.security.web.context.SecurityContextHolderFilter@2262d273, org.springframework.security.web.header.HeaderWriterFilter@50db2df, org.springframework.security.web.authentication.logout.LogoutFilter@2cae4d29, com.hayan.dividend.jwt.JwtAuthenticationFilter@7afe9893, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@248343db, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@391656d6, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2de43602, org.springframework.security.web.session.SessionManagementFilter@67b56f2f, org.springframework.security.web.access.ExceptionTranslationFilter@4e345feb, org.springframework.security.web.access.intercept.AuthorizationFilter@1e98b53d]]
2024-09-07 00:17:07 INFO  c.hayan.dividend.aop.LoggingAspect - Executed method: SecurityConfig.securityFilterChain in 18 ms
2024-09-07 00:17:07 INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2024-09-07 00:17:07 INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2024-09-07 00:17:07 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2024-09-07 00:17:07 INFO  c.hayan.dividend.DividendApplication - Started DividendApplication in 2.769 seconds (process running for 3.129)
2024-09-07 00:17:17 INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-09-07 00:17:17 INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-09-07 00:17:17 INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 5 ms
2024-09-07 00:17:17 INFO  c.hayan.dividend.aop.LoggingAspect - Entering method: UserController.register with arguments: [UserRequest[username=hayan, password=test, roles=[WRITE, READ]]]
2024-09-07 00:17:17 INFO  c.hayan.dividend.aop.LoggingAspect - Entering method: UserService.register with arguments: [UserRequest[username=hayan, password=test, roles=[WRITE, READ]]]
2024-09-07 00:17:18 DEBUG org.hibernate.SQL - 
    /* insert for
        com.hayan.dividend.domain.User */insert 
    into
        users (password, username, id) 
    values
        (?, ?, default)
2024-09-07 00:17:18 INFO  c.hayan.dividend.aop.LoggingAspect - Exiting method: UserService.register with result: null
2024-09-07 00:17:18 INFO  c.hayan.dividend.aop.LoggingAspect - Executed method: UserService.register in 102 ms
2024-09-07 00:17:18 DEBUG org.hibernate.SQL - 
    /* insert for
        com.hayan.dividend.domain.User.roles */insert 
    into
        user_roles (user_id, role) 
    values
        (?, ?)
2024-09-07 00:17:18 DEBUG org.hibernate.SQL - 
    /* insert for
        com.hayan.dividend.domain.User.roles */insert 
    into
        user_roles (user_id, role) 
    values
        (?, ?)
2024-09-07 00:17:18 INFO  c.hayan.dividend.aop.LoggingAspect - Exiting method: UserController.register with result: com.hayan.dividend.global.ApplicationResponse@830d8ec
2024-09-07 00:17:18 INFO  c.hayan.dividend.aop.LoggingAspect - Executed method: UserController.register in 109 ms
2024-09-07 00:17:21 INFO  c.hayan.dividend.aop.LoggingAspect - Entering method: UserController.signin with arguments: [UserRequest[username=hayan, password=test, roles=null]]
2024-09-07 00:17:21 INFO  c.hayan.dividend.aop.LoggingAspect - Entering method: AuthenticationService.authenticateAndGenerateToken with arguments: [UserRequest[username=hayan, password=test, roles=null]]
2024-09-07 00:17:21 INFO  c.hayan.dividend.aop.LoggingAspect - Entering method: UserService.authenticate with arguments: [UserRequest[username=hayan, password=test, roles=null]]
2024-09-07 00:17:21 INFO  c.hayan.dividend.aop.LoggingAspect - Entering method: CustomUserDetailsService.loadUserByUsername with arguments: [hayan]
2024-09-07 00:17:21 DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2024-09-07 00:17:21 DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_0.role 
    from
        user_roles r1_0 
    where
        r1_0.user_id=?
2024-09-07 00:17:21 INFO  c.hayan.dividend.aop.LoggingAspect - Exiting method: CustomUserDetailsService.loadUserByUsername with result: org.springframework.security.core.userdetails.User [Username=hayan, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_READ, ROLE_WRITE]]
2024-09-07 00:17:21 INFO  c.hayan.dividend.aop.LoggingAspect - Executed method: CustomUserDetailsService.loadUserByUsername in 19 ms
2024-09-07 00:17:21 INFO  c.hayan.dividend.aop.LoggingAspect - Exiting method: UserService.authenticate with result: UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=hayan, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_READ, ROLE_WRITE]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_READ, ROLE_WRITE]]
2024-09-07 00:17:21 INFO  c.hayan.dividend.aop.LoggingAspect - Executed method: UserService.authenticate in 192 ms
2024-09-07 00:17:21 INFO  c.hayan.dividend.aop.LoggingAspect - Entering method: JwtTokenProvider.generateToken with arguments: [hayan, [ROLE_READ, ROLE_WRITE]]
2024-09-07 00:17:21 INFO  c.hayan.dividend.aop.LoggingAspect - Exiting method: JwtTokenProvider.generateToken with result: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJoYXlhbiIsInJvbGVzIjpbIlJPTEVfUkVBRCIsIlJPTEVfV1JJVEUiXSwiaWF0IjoxNzI1NjM1ODQxLCJleHAiOjE3MjU3MjIyNDF9.CvDWsi6QEpmXXe3SEeEMI_UDm5LtL_qVLgb9oApN0JHKaLw0Tp9qTemhG5XnNRhhq4MSsx6Le-3KmuqLvtuPrg
2024-09-07 00:17:21 INFO  c.hayan.dividend.aop.LoggingAspect - Executed method: JwtTokenProvider.generateToken in 25 ms
2024-09-07 00:17:21 INFO  c.hayan.dividend.aop.LoggingAspect - Exiting method: AuthenticationService.authenticateAndGenerateToken with result: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJoYXlhbiIsInJvbGVzIjpbIlJPTEVfUkVBRCIsIlJPTEVfV1JJVEUiXSwiaWF0IjoxNzI1NjM1ODQxLCJleHAiOjE3MjU3MjIyNDF9.CvDWsi6QEpmXXe3SEeEMI_UDm5LtL_qVLgb9oApN0JHKaLw0Tp9qTemhG5XnNRhhq4MSsx6Le-3KmuqLvtuPrg
2024-09-07 00:17:21 INFO  c.hayan.dividend.aop.LoggingAspect - Executed method: AuthenticationService.authenticateAndGenerateToken in 218 ms
2024-09-07 00:17:21 INFO  c.hayan.dividend.aop.LoggingAspect - Exiting method: UserController.signin with result: <200 OK OK,success,[Authorization:"Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJoYXlhbiIsInJvbGVzIjpbIlJPTEVfUkVBRCIsIlJPTEVfV1JJVEUiXSwiaWF0IjoxNzI1NjM1ODQxLCJleHAiOjE3MjU3MjIyNDF9.CvDWsi6QEpmXXe3SEeEMI_UDm5LtL_qVLgb9oApN0JHKaLw0Tp9qTemhG5XnNRhhq4MSsx6Le-3KmuqLvtuPrg"]>
2024-09-07 00:17:21 INFO  c.hayan.dividend.aop.LoggingAspect - Executed method: UserController.signin in 219 ms
2024-09-07 00:17:36 INFO  c.hayan.dividend.aop.LoggingAspect - Entering method: JwtTokenProvider.validateToken with arguments: [eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJoYXlhbiIsInJvbGVzIjpbIlJPTEVfUkVBRCIsIlJPTEVfV1JJVEUiXSwiaWF0IjoxNzI1NjM1ODQxLCJleHAiOjE3MjU3MjIyNDF9.CvDWsi6QEpmXXe3SEeEMI_UDm5LtL_qVLgb9oApN0JHKaLw0Tp9qTemhG5XnNRhhq4MSsx6Le-3KmuqLvtuPrg]
2024-09-07 00:17:36 INFO  c.hayan.dividend.aop.LoggingAspect - Exiting method: JwtTokenProvider.validateToken with result: null
2024-09-07 00:17:36 INFO  c.hayan.dividend.aop.LoggingAspect - Executed method: JwtTokenProvider.validateToken in 26 ms
2024-09-07 00:17:36 INFO  c.hayan.dividend.aop.LoggingAspect - Entering method: JwtTokenProvider.getUsernameFromJWT with arguments: [eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJoYXlhbiIsInJvbGVzIjpbIlJPTEVfUkVBRCIsIlJPTEVfV1JJVEUiXSwiaWF0IjoxNzI1NjM1ODQxLCJleHAiOjE3MjU3MjIyNDF9.CvDWsi6QEpmXXe3SEeEMI_UDm5LtL_qVLgb9oApN0JHKaLw0Tp9qTemhG5XnNRhhq4MSsx6Le-3KmuqLvtuPrg]
2024-09-07 00:17:36 INFO  c.hayan.dividend.aop.LoggingAspect - Exiting method: JwtTokenProvider.getUsernameFromJWT with result: hayan
2024-09-07 00:17:36 INFO  c.hayan.dividend.aop.LoggingAspect - Executed method: JwtTokenProvider.getUsernameFromJWT in 1 ms
2024-09-07 00:17:36 INFO  c.hayan.dividend.aop.LoggingAspect - Entering method: CustomUserDetailsService.loadUserByUsername with arguments: [hayan]
2024-09-07 00:17:36 DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.password,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2024-09-07 00:17:36 DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_0.role 
    from
        user_roles r1_0 
    where
        r1_0.user_id=?
2024-09-07 00:17:36 INFO  c.hayan.dividend.aop.LoggingAspect - Exiting method: CustomUserDetailsService.loadUserByUsername with result: org.springframework.security.core.userdetails.User [Username=hayan, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_READ, ROLE_WRITE]]
2024-09-07 00:17:36 INFO  c.hayan.dividend.aop.LoggingAspect - Executed method: CustomUserDetailsService.loadUserByUsername in 21 ms
2024-09-07 00:17:36 INFO  c.hayan.dividend.aop.LoggingAspect - Entering method: FinanceController.create with arguments: [clsf]
2024-09-07 00:17:36 INFO  c.hayan.dividend.aop.LoggingAspect - Entering method: FinanceService.save with arguments: [clsf]
2024-09-07 00:17:36 DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id 
    from
        companies c1_0 
    where
        c1_0.ticker=? 
    fetch
        first ? rows only
2024-09-07 00:17:36 INFO  c.hayan.dividend.aop.LoggingAspect - Entering method: YahooFinanceScraper.scrapCompany with arguments: [clsf]
2024-09-07 00:17:38 INFO  c.hayan.dividend.aop.LoggingAspect - Entering method: GlobalExceptionHandler.handleCustomException with arguments: [com.hayan.dividend.exception.CustomException: 존재하지 않는 회사입니다.]
2024-09-07 00:17:38 ERROR c.h.d.e.GlobalExceptionHandler - CustomException: 존재하지 않는 회사입니다., HTTP Status: 404 NOT_FOUND
2024-09-07 00:17:38 INFO  c.hayan.dividend.aop.LoggingAspect - Exiting method: GlobalExceptionHandler.handleCustomException with result: <404 NOT_FOUND Not Found,ErrorResponse[status=404, name=COMPANY_NOT_FOUND, message=존재하지 않는 회사입니다.],[]>
2024-09-07 00:17:38 INFO  c.hayan.dividend.aop.LoggingAspect - Executed method: GlobalExceptionHandler.handleCustomException in 1 ms
2024-09-07 00:17:38 WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [com.hayan.dividend.exception.CustomException: 존재하지 않는 회사입니다.]
2024-09-07 00:18:13 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-09-07 00:18:13 WARN  o.s.b.f.s.DisposableBeanAdapter - Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-224]
2024-09-07 00:18:13 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-09-07 00:18:13 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-09-07 00:18:14 INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2024-09-07 00:18:14 INFO  c.hayan.dividend.DividendApplication - Starting DividendApplication using Java 17.0.7 with PID 86042 (/Users/chowhite/coding/zerobase/dividend/build/classes/java/main started by chowhite in /Users/chowhite/coding/zerobase/dividend)
2024-09-07 00:18:14 INFO  c.hayan.dividend.DividendApplication - The following 2 profiles are active: "test", "default"
2024-09-07 00:18:14 INFO  o.s.b.d.restart.ChangeableUrls - The Class-Path manifest attribute in /Users/chowhite/.gradle/caches/modules-2/files-2.1/io.github.cdimascio/java-dotenv/5.2.2/f77d54ff193ed4b07415ab8d7b3d0550716aa8c/java-dotenv-5.2.2.jar referenced one or more files that do not exist: file:/Users/chowhite/.gradle/caches/modules-2/files-2.1/io.github.cdimascio/java-dotenv/5.2.2/f77d54ff193ed4b07415ab8d7b3d0550716aa8c/kotlin-stdlib-1.4.0.jar,file:/Users/chowhite/.gradle/caches/modules-2/files-2.1/io.github.cdimascio/java-dotenv/5.2.2/f77d54ff193ed4b07415ab8d7b3d0550716aa8c/kotlin-stdlib-common-1.4.0.jar,file:/Users/chowhite/.gradle/caches/modules-2/files-2.1/io.github.cdimascio/java-dotenv/5.2.2/f77d54ff193ed4b07415ab8d7b3d0550716aa8c/annotations-13.0.jar
2024-09-07 00:18:14 INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-09-07 00:18:14 INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-09-07 00:18:15 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-09-07 00:18:15 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-09-07 00:18:15 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 65 ms. Found 3 JPA repository interfaces.
2024-09-07 00:18:15 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-09-07 00:18:15 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-09-07 00:18:15 INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.hayan.dividend.repository.CompanyRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-09-07 00:18:15 INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.hayan.dividend.repository.DividendRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-09-07 00:18:15 INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.hayan.dividend.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-09-07 00:18:15 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2024-09-07 00:18:15 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-09-07 00:18:15 INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-09-07 00:18:15 INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-09-07 00:18:15 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.28]
2024-09-07 00:18:15 INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-09-07 00:18:15 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 723 ms
2024-09-07 00:18:15 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-09-07 00:18:15 INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:db user=SA
2024-09-07 00:18:15 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-09-07 00:18:15 INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:db'
2024-09-07 00:18:15 INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-09-07 00:18:15 INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.2.Final
2024-09-07 00:18:15 INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-09-07 00:18:15 INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-09-07 00:18:16 INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-09-07 00:18:16 DEBUG org.hibernate.SQL - 
    create table companies (
        id bigint generated by default as identity,
        name varchar(255) not null,
        ticker varchar(255) not null,
        primary key (id)
    )
2024-09-07 00:18:16 DEBUG org.hibernate.SQL - 
    create table dividends (
        id bigint generated by default as identity,
        date date,
        dividend varchar(255),
        company_id bigint,
        primary key (id)
    )
2024-09-07 00:18:16 DEBUG org.hibernate.SQL - 
    create table user_roles (
        user_id bigint not null,
        role enum ('READ','WRITE')
    )
2024-09-07 00:18:16 DEBUG org.hibernate.SQL - 
    create table users (
        id bigint generated by default as identity,
        password varchar(255) not null,
        username varchar(255) not null,
        primary key (id)
    )
2024-09-07 00:18:16 DEBUG org.hibernate.SQL - 
    alter table if exists users 
       drop constraint if exists UKr43af9ap4edm43mmtq01oddj6
2024-09-07 00:18:16 DEBUG org.hibernate.SQL - 
    alter table if exists users 
       add constraint UKr43af9ap4edm43mmtq01oddj6 unique (username)
2024-09-07 00:18:16 DEBUG org.hibernate.SQL - 
    alter table if exists dividends 
       add constraint FKeg6asiy7s7dns1nsxve1avean 
       foreign key (company_id) 
       references companies
2024-09-07 00:18:16 DEBUG org.hibernate.SQL - 
    alter table if exists user_roles 
       add constraint FKhfh9dx7w3ubf1co1vdev94g3f 
       foreign key (user_id) 
       references users
2024-09-07 00:18:16 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-09-07 00:18:16 DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.name,
        c1_0.ticker 
    from
        companies c1_0
2024-09-07 00:18:16 INFO  c.hayan.dividend.aop.LoggingAspect - Entering method: CacheConfig.redisConnectionFactory with arguments: []
2024-09-07 00:18:16 INFO  c.hayan.dividend.aop.LoggingAspect - Exiting method: CacheConfig.redisConnectionFactory with result: org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory@b9adc1a
2024-09-07 00:18:16 INFO  c.hayan.dividend.aop.LoggingAspect - Executed method: CacheConfig.redisConnectionFactory in 8 ms
2024-09-07 00:18:16 INFO  c.hayan.dividend.aop.LoggingAspect - Entering method: CacheConfig.redisCacheManager with arguments: [org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory@b9adc1a]
2024-09-07 00:18:16 INFO  c.hayan.dividend.aop.LoggingAspect - Exiting method: CacheConfig.redisCacheManager with result: org.springframework.data.redis.cache.RedisCacheManager@7f60a655
2024-09-07 00:18:16 INFO  c.hayan.dividend.aop.LoggingAspect - Executed method: CacheConfig.redisCacheManager in 9 ms
2024-09-07 00:18:16 INFO  c.hayan.dividend.aop.LoggingAspect - Entering method: SecurityConfig.passwordEncoder with arguments: []
2024-09-07 00:18:16 INFO  c.hayan.dividend.aop.LoggingAspect - Exiting method: SecurityConfig.passwordEncoder with result: org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder@2c305a46
2024-09-07 00:18:16 INFO  c.hayan.dividend.aop.LoggingAspect - Executed method: SecurityConfig.passwordEncoder in 1 ms
2024-09-07 00:18:16 INFO  c.hayan.dividend.aop.LoggingAspect - Entering method: SecurityConfig.authenticationManager with arguments: [org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration@6417378f]
2024-09-07 00:18:16 INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2024-09-07 00:18:16 INFO  c.hayan.dividend.aop.LoggingAspect - Exiting method: SecurityConfig.authenticationManager with result: org.springframework.security.authentication.ProviderManager@40fec328
2024-09-07 00:18:16 INFO  c.hayan.dividend.aop.LoggingAspect - Executed method: SecurityConfig.authenticationManager in 12 ms
2024-09-07 00:18:16 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-09-07 00:18:16 INFO  c.hayan.dividend.aop.LoggingAspect - Entering method: SecurityConfig.securityFilterChain with arguments: [org.springframework.security.config.annotation.web.builders.HttpSecurity@2a60e6b9]
2024-09-07 00:18:16 INFO  c.hayan.dividend.aop.LoggingAspect - Exiting method: SecurityConfig.securityFilterChain with result: DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@60750ce9, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@607b5709, org.springframework.security.web.context.SecurityContextHolderFilter@56482f60, org.springframework.security.web.header.HeaderWriterFilter@5a9fa129, org.springframework.security.web.authentication.logout.LogoutFilter@558cd0d9, com.hayan.dividend.jwt.JwtAuthenticationFilter@1bea1b78, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2cf8b3a2, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2a157547, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@d4d3e2b, org.springframework.security.web.session.SessionManagementFilter@60709444, org.springframework.security.web.access.ExceptionTranslationFilter@3a65d75f, org.springframework.security.web.access.intercept.AuthorizationFilter@1f03e1b7]]
2024-09-07 00:18:16 INFO  c.hayan.dividend.aop.LoggingAspect - Executed method: SecurityConfig.securityFilterChain in 17 ms
2024-09-07 00:18:16 INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2024-09-07 00:18:16 INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2024-09-07 00:18:16 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2024-09-07 00:18:16 INFO  c.hayan.dividend.DividendApplication - Started DividendApplication in 2.374 seconds (process running for 2.678)
2024-09-07 00:20:00 INFO  c.hayan.dividend.aop.LoggingAspect - Entering method: YahooFinanceScheduling.updateDividends with arguments: []
2024-09-07 00:20:00 DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        c1_0.id,
        c1_0.name,
        c1_0.ticker 
    from
        companies c1_0
2024-09-07 00:20:00 INFO  c.hayan.dividend.aop.LoggingAspect - Exiting method: YahooFinanceScheduling.updateDividends with result: null
2024-09-07 00:20:00 INFO  c.hayan.dividend.aop.LoggingAspect - Executed method: YahooFinanceScheduling.updateDividends in 18 ms
2024-09-07 00:20:06 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-09-07 00:20:06 WARN  o.s.b.f.s.DisposableBeanAdapter - Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-224]
2024-09-07 00:20:06 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-09-07 00:20:06 INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
